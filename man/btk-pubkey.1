'\" t
.\"     Title: Bitcoin Toolkit
.\"    Author: [see the "Authors" section]
.\"      Date: 01/18/2023
.\"    Manual: Bitcoin Toolkit Manual
.\"    Source: Bitcoin Toolkit 3.0.0
.\"  Language: English
.\"
.TH "BTK" "1" "01/18/2023" "Bitcoin Toolkit 3.0.0" "Bitcoin Toolkit Manual"
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
btk-pubkey \- Generate or modify public keys.
.SH "SYNOPSIS"
.sp
.nf
\fIbtk\fR \fIpubkey\fR [<options>]
.fi

.sp
.SH "DESCRIPTION"

.sp
Generate the corresponding public key from a private key, or compress/uncompress existing public keys.
.sp
Public keys are represented in hexidecimal format only.

.sp
.SH "OPTIONS"

.SS "Input/Output Format"

.PP
\-j, --in-format=json
.RS 4
Input is formatted as a list of values contained within a json array. If a valid json object (name/value pairs) is provided as input, the object will be traversed until the first array value is discovered. The values in this array will be processed as input.
.RE

.PP
\-l, --in-format=list
.RS 4
Input is formatted as a list of ascii strings delimited by a newline character.
.RE

.PP
\-J, --out-format=json
.RS 4
Default. Format output as a json data structure. This is usually a json array, but it can sometimes be a key/value object when other options are applied.
.RE

.PP
\-L, --out-format=list
.RS 4
Format output as an ascii string list delimited by a newline character.
.RE

.SS "Input Type"

.PP
\-w, --in-type=wif
.RS 4
Input type is a private key in "Wallet Import Format" (wif).
.RE

.PP
\-x, --in-type=hex
.RS 4
Input type is a public key represented as a 33 (copressed) or 65 (uncompressed) byte byte hexadecimal string.
.RE

.SS "Compression"

.PP
\-C, --compressed=true
.RS 4
Default. Compress the public key. 
.RE

.PP
\-U, --compressed=false
.RS 4
Uncompress the public key.
.RE

.SS "Misc"

.PP
\-G <regex>, --grep=<regex>
.RS 4
Only include output list items that match the regex string.
.RE

.PP
\-S, --stream
.RS 4
Stream the output. This prints the output as soon as each input item in a list is processed. Useful for large list processing. When this option is not used (default), all output is printed to stdout when the last item is processed.
.RE

.PP
\--trace
.RS 4
When output is formatted as json, include the input string in the output json data structure. The input string will be set as a json object key, and the value will be the normal output array. This is useful when you want to preserve all the inputs used in a string of commands so that they are all represented in the final outout.
.RE

.sp
.SH "SEE ALSO"

.sp
\fBbtk\fR(1), \fBbtk-pubkey\fR(1), \fBbtk-address\fR(1)